// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tool/": {
            "get": {
                "description": "Get the name of all available tools",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tools"
                ],
                "summary": "Get all available tools",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/tool/{name}": {
            "get": {
                "description": "Get details for a tool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tools"
                ],
                "summary": "Get available tool by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tool name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tool.GetToolResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "tool.GetToolResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/tsf.Tool"
                }
            }
        },
        "tsf.EnvVar": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "tsf.Executable": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "modifiers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/tsf.Modifier"
                    }
                },
                "stdin": {
                    "type": "boolean"
                }
            }
        },
        "tsf.IOType": {
            "type": "integer",
            "enum": [
                0,
                0,
                0,
                0
            ],
            "x-enum-varnames": [
                "FILE",
                "STRING",
                "STDOUT",
                "STDIN"
            ]
        },
        "tsf.IOVariable": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/tsf.IOType"
                }
            }
        },
        "tsf.Modifier": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "tsf.Tool": {
            "type": "object",
            "properties": {
                "env": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tsf.EnvVar"
                    }
                },
                "exe": {
                    "$ref": "#/definitions/tsf.Executable"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tsf.IOVariable"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tsf.IOVariable"
                    }
                },
                "sandbox": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "WorkerEngine API",
	Description:      "WorkerEngine is a sandbox API to execute TSF based software.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
