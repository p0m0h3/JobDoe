definitions:
  schemas.CreateTaskRequest:
    properties:
      env:
        additionalProperties:
          type: string
        type: object
      files:
        additionalProperties:
          type: string
        type: object
      inputs:
        additionalProperties:
          type: string
        type: object
      modifier:
        type: string
      stdin:
        type: string
      tool:
        type: string
    required:
    - modifier
    - tool
    type: object
  schemas.ErrorResponse:
    properties:
      code:
        type: integer
      details:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
  schemas.Task:
    properties:
      cmd:
        items:
          type: string
        type: array
      env:
        additionalProperties:
          type: string
        type: object
      files:
        additionalProperties:
          type: string
        type: object
      id:
        type: string
      status:
        type: string
    type: object
  schemas.Tool:
    properties:
      id:
        type: string
      spec:
        $ref: '#/definitions/tsf.Tool'
    type: object
  tsf.EnvVar:
    properties:
      name:
        type: string
    type: object
  tsf.Executable:
    properties:
      command:
        type: string
      modifiers:
        additionalProperties:
          $ref: '#/definitions/tsf.Modifier'
        type: object
      stdin:
        type: boolean
    type: object
  tsf.IOType:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - FILE
    - STRING
    - STDOUT
    - STDIN
  tsf.IOVariable:
    properties:
      name:
        type: string
      type:
        $ref: '#/definitions/tsf.IOType'
    type: object
  tsf.Modifier:
    properties:
      string:
        type: string
      variables:
        items:
          type: string
        type: array
    type: object
  tsf.Tool:
    properties:
      env:
        items:
          $ref: '#/definitions/tsf.EnvVar'
        type: array
      exe:
        $ref: '#/definitions/tsf.Executable'
      inputs:
        items:
          $ref: '#/definitions/tsf.IOVariable'
        type: array
      name:
        type: string
      outputs:
        items:
          $ref: '#/definitions/tsf.IOVariable'
        type: array
      sandbox:
        type: string
    type: object
host: 127.0.0.1:7001
info:
  contact: {}
  description: WorkerEngine is a sandbox API to execute TSF based software.
  title: WorkerEngine API
  version: "1.0"
paths:
  /task:
    get:
      consumes:
      - application/json
      description: Returns all identified tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Task'
      summary: Get a list of all tasks
      tags:
      - tasks
  /task/:
    post:
      consumes:
      - application/json
      description: Start a new sandbox with a tool running inside
      parameters:
      - description: new task data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Create a new task
      tags:
      - tasks
  /task/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task's data and container
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Returns the details of a task
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Task'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get the details of a task
      tags:
      - tasks
  /task/{id}/stats:
    get:
      consumes:
      - application/json
      description: Get the resource usage of a task
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Task statistics
      tags:
      - tasks
  /task/{id}/stdout:
    get:
      consumes:
      - application/json
      description: Returns the details of a task
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get the details of a task
      tags:
      - tasks
  /task/{id}/wait:
    get:
      consumes:
      - application/json
      description: Return when a task state is changed to exited
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Wait on task
      tags:
      - tasks
  /tool/:
    get:
      consumes:
      - application/json
      description: Get the name of all available tools
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get all available tools
      tags:
      - tools
  /tool/{name}:
    get:
      consumes:
      - application/json
      description: Get details for a tool
      parameters:
      - description: Tool name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Tool'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get available tool by name
      tags:
      - tools
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
