definitions:
  schemas.CreateTaskRequest:
    properties:
      command:
        items:
          type: string
        type: array
      env:
        additionalProperties:
          type: string
        type: object
      inputs:
        additionalProperties:
          additionalProperties:
            type: string
          type: object
        type: object
      modifiers:
        items:
          type: string
        type: array
      profile:
        type: string
      tool:
        type: string
    required:
    - tool
    type: object
  schemas.ErrorResponse:
    properties:
      code:
        type: integer
      errors:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
  schemas.Task:
    properties:
      command:
        items:
          type: string
        type: array
      env:
        additionalProperties:
          type: string
        type: object
      id:
        type: string
      status:
        type: string
    type: object
  tsf.Default:
    properties:
      default:
        type: string
      modifier:
        type: string
      name:
        type: string
    required:
    - default
    - modifier
    - name
    type: object
  tsf.Execute:
    properties:
      command:
        type: string
      environment:
        items:
          type: string
        type: array
      modifiers:
        items:
          $ref: '#/definitions/tsf.Modifier'
        type: array
        uniqueItems: true
      profiles:
        items:
          $ref: '#/definitions/tsf.Profile'
        type: array
        uniqueItems: true
    required:
    - command
    type: object
  tsf.Header:
    properties:
      category:
        items:
          type: string
        type: array
      environment:
        enum:
        - jails
        - oci
        type: string
      human:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
      source:
        type: string
      version:
        type: number
    required:
    - environment
    - id
    - image
    - version
    type: object
  tsf.Modifier:
    properties:
      format:
        type: string
      human:
        type: string
      name:
        type: string
      order:
        type: integer
      variables:
        items:
          $ref: '#/definitions/tsf.Variable'
        type: array
    required:
    - format
    - name
    type: object
  tsf.Profile:
    properties:
      category:
        items:
          type: string
        type: array
      defaults:
        items:
          $ref: '#/definitions/tsf.Default'
        type: array
      human:
        type: string
      modifiers:
        items:
          type: string
        type: array
      name:
        type: string
    required:
    - name
    type: object
  tsf.Spec:
    properties:
      execute:
        $ref: '#/definitions/tsf.Execute'
      header:
        $ref: '#/definitions/tsf.Header'
    required:
    - execute
    - header
    type: object
  tsf.Variable:
    properties:
      class:
        type: string
      default:
        type: string
      human:
        type: string
      name:
        type: string
      type:
        enum:
        - string
        - url
        - domain
        - email
        - file
        - output
        - number
        - enum
        - list
        type: string
      validation:
        type: string
      values:
        items:
          type: string
        type: array
    required:
    - name
    type: object
host: 127.0.0.1:7001
info:
  contact: {}
  description: WorkerEngine is a sandbox API to execute TSF based software.
  title: WorkerEngine API
  version: v0.1.0
paths:
  /v1:
    get:
      consumes:
      - application/json
      description: Information includes version, configuration and state
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get info about the worker server
      tags:
      - state
  /v1/task:
    delete:
      consumes:
      - application/json
      description: Prune the data and container of all stopped/exited tasks
      produces:
      - text/plain
      responses:
        "204":
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Prune all stopped/exited tasks
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Returns all identified tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.Task'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get a list of all tasks
      tags:
      - tasks
  /v1/task/:
    post:
      consumes:
      - application/json
      description: Start a new sandbox with a tool running inside
      parameters:
      - description: new task data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new task
      tags:
      - tasks
  /v1/task/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task's data and container
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Returns the details of a task
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Task'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get the details of a task
      tags:
      - tasks
  /v1/task/{id}/files:
    get:
      consumes:
      - application/json
      description: Returns the contents of output files
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get output files from task
      tags:
      - tasks
  /v1/task/{id}/log:
    get:
      consumes:
      - application/json
      description: Get the stdout/stderr of an exited task in plaintext
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      - description: should include stderr
        in: query
        name: stderr
        type: boolean
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get the stdout/stderr of a exited task
      tags:
      - tasks
  /v1/task/{id}/stats:
    get:
      consumes:
      - application/json
      description: Get the resource usage of a task
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Task statistics
      tags:
      - tasks
  /v1/task/{id}/wait:
    get:
      consumes:
      - application/json
      description: Return when a task state is changed to exited
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Wait on task
      tags:
      - tasks
  /v1/tool:
    post:
      consumes:
      - text/plain
      description: Upload a custom tsf file to use
      parameters:
      - description: new tool spec
        in: body
        name: spec
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tsf.Spec'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new spec
      tags:
      - tools
  /v1/tool/:
    get:
      consumes:
      - application/json
      description: Get the name of all available tools
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all available tools
      tags:
      - tools
  /v1/tool/{name}:
    get:
      consumes:
      - application/json
      description: Get details for a tool
      parameters:
      - description: Tool name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tsf.Spec'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get available tool by name
      tags:
      - tools
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
